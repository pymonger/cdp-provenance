/**
 * generated by http://RDFReactor.semweb4j.org ($Id: CodeGenerator.java 1765 2010-02-11 09:51:13Z max.at.xam.de $) on 2/21/12 8:19 AM
 */
package gov.nasa.jpl.cdp.provenance.opmo_es;

import org.ontoware.aifbcommons.collection.ClosableIterator;
import org.ontoware.rdf2go.exception.ModelRuntimeException;
import org.ontoware.rdf2go.model.Model;
import org.ontoware.rdf2go.model.node.BlankNode;
import org.ontoware.rdf2go.model.node.URI;
import org.ontoware.rdf2go.model.node.impl.URIImpl;
import org.ontoware.rdfreactor.runtime.Base;
import org.ontoware.rdfreactor.runtime.ReactorResult;

/**
 * This class manages access to these properties:
 * <ul>
 *   <li> Avalue </li>
 *   <li> EffectWasDerivedFromInverse </li>
 *   <li> EffectWasGeneratedByInverse </li>
 *   <li> WasDerivedFrom_ </li>
 *   <li> WasGeneratedBy_ </li>
 * </ul>
 *
 * This class was generated by <a href="http://RDFReactor.semweb4j.org">RDFReactor</a> on 2/21/12 8:19 AM
 */
public class Artifact extends Node {

    /** http://purl.org/net/opmv/ns#Artifact */
	@SuppressWarnings("hiding")
	public static final URI RDFS_CLASS = new URIImpl("http://purl.org/net/opmv/ns#Artifact", false);

    /** http://openprovenance.org/model/opmo#avalue */
	public static final URI AVALUE = new URIImpl("http://openprovenance.org/model/opmo#avalue",false);

    /** http://openprovenance.org/model/opmo#effectWasDerivedFromInverse */
	public static final URI EFFECTWASDERIVEDFROMINVERSE = new URIImpl("http://openprovenance.org/model/opmo#effectWasDerivedFromInverse",false);

    /** http://openprovenance.org/model/opmo#effectWasGeneratedByInverse */
	public static final URI EFFECTWASGENERATEDBYINVERSE = new URIImpl("http://openprovenance.org/model/opmo#effectWasGeneratedByInverse",false);

    /** http://openprovenance.org/model/opmo#wasDerivedFromStar */
	public static final URI WASDERIVEDFROM_ = new URIImpl("http://openprovenance.org/model/opmo#wasDerivedFromStar",false);

    /** http://openprovenance.org/model/opmo#wasGeneratedByStar */
	public static final URI WASGENERATEDBY_ = new URIImpl("http://openprovenance.org/model/opmo#wasGeneratedByStar",false);

    /** 
     * All property-URIs with this class as domain.
     * All properties of all super-classes are also available. 
     */
	@SuppressWarnings("hiding")
    public static final URI[] MANAGED_URIS = {
      new URIImpl("http://openprovenance.org/model/opmo#avalue",false),
      new URIImpl("http://openprovenance.org/model/opmo#effectWasDerivedFromInverse",false),
      new URIImpl("http://openprovenance.org/model/opmo#effectWasGeneratedByInverse",false),
      new URIImpl("http://openprovenance.org/model/opmo#wasDerivedFromStar",false),
      new URIImpl("http://openprovenance.org/model/opmo#wasGeneratedByStar",false) 
    };


	// protected constructors needed for inheritance
	
	/**
	 * Returns a Java wrapper over an RDF object, identified by URI.
	 * Creating two wrappers for the same instanceURI is legal.
	 * @param model RDF2GO Model implementation, see http://rdf2go.semweb4j.org
	 * @param classURI URI of RDFS class
	 * @param instanceIdentifier Resource that identifies this instance
	 * @param write if true, the statement (this, rdf:type, TYPE) is written to the model
	 *
	 * [Generated from RDFReactor template rule #c1] 
	 */
	protected Artifact ( Model model, URI classURI, org.ontoware.rdf2go.model.node.Resource instanceIdentifier, boolean write ) {
		super(model, classURI, instanceIdentifier, write);
	}

	// public constructors

	/**
	 * Returns a Java wrapper over an RDF object, identified by URI.
	 * Creating two wrappers for the same instanceURI is legal.
	 * @param model RDF2GO Model implementation, see http://rdf2go.ontoware.org
	 * @param instanceIdentifier an RDF2Go Resource identifying this instance
	 * @param write if true, the statement (this, rdf:type, TYPE) is written to the model
	 *
	 * [Generated from RDFReactor template rule #c2] 
	 */
	public Artifact ( Model model, org.ontoware.rdf2go.model.node.Resource instanceIdentifier, boolean write ) {
		super(model, RDFS_CLASS, instanceIdentifier, write);
	}


	/**
	 * Returns a Java wrapper over an RDF object, identified by a URI, given as a String.
	 * Creating two wrappers for the same URI is legal.
	 * @param model RDF2GO Model implementation, see http://rdf2go.ontoware.org
	 * @param uriString a URI given as a String
	 * @param write if true, the statement (this, rdf:type, TYPE) is written to the model
	 * @throws ModelRuntimeException if URI syntax is wrong
	 *
	 * [Generated from RDFReactor template rule #c7] 
	 */
	public Artifact ( Model model, String uriString, boolean write) throws ModelRuntimeException {
		super(model, RDFS_CLASS, new URIImpl(uriString,false), write);
	}

	/**
	 * Returns a Java wrapper over an RDF object, identified by a blank node.
	 * Creating two wrappers for the same blank node is legal.
	 * @param model RDF2GO Model implementation, see http://rdf2go.ontoware.org
	 * @param bnode BlankNode of this instance
	 * @param write if true, the statement (this, rdf:type, TYPE) is written to the model
	 *
	 * [Generated from RDFReactor template rule #c8] 
	 */
	public Artifact ( Model model, BlankNode bnode, boolean write ) {
		super(model, RDFS_CLASS, bnode, write);
	}

	/**
	 * Returns a Java wrapper over an RDF object, identified by 
	 * a randomly generated URI.
	 * Creating two wrappers results in different URIs.
	 * @param model RDF2GO Model implementation, see http://rdf2go.ontoware.org
	 * @param write if true, the statement (this, rdf:type, TYPE) is written to the model
	 *
	 * [Generated from RDFReactor template rule #c9] 
	 */
	public Artifact ( Model model, boolean write ) {
		super(model, RDFS_CLASS, model.newRandomUniqueURI(), write);
	}

    ///////////////////////////////////////////////////////////////////
    // typing

	/**
	 * Return an existing instance of this class in the model. No statements are written.
	 * @param model an RDF2Go model
	 * @param instanceResource an RDF2Go resource
	 * @return an instance of Artifact  or null if none existst
	 *
	 * [Generated from RDFReactor template rule #class0] 
	 */
	public static Artifact  getInstance(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getInstance(model, instanceResource, Artifact.class);
	}

	/**
	 * Create a new instance of this class in the model. 
	 * That is, create the statement (instanceResource, RDF.type, http://purl.org/net/opmv/ns#Artifact).
	 * @param model an RDF2Go model
	 * @param instanceResource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #class1] 
	 */
	public static void createInstance(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		Base.createInstance(model, RDFS_CLASS, instanceResource);
	}

	/**
	 * @param model an RDF2Go model
	 * @param instanceResource an RDF2Go resource
	 * @return true if instanceResource is an instance of this class in the model
	 *
	 * [Generated from RDFReactor template rule #class2] 
	 */
	public static boolean hasInstance(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.hasInstance(model, RDFS_CLASS, instanceResource);
	}

	/**
	 * @param model an RDF2Go model
	 * @return all instances of this class in Model 'model' as RDF resources
	 *
	 * [Generated from RDFReactor template rule #class3] 
	 */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Resource> getAllInstances(Model model) {
		return Base.getAllInstances(model, RDFS_CLASS, org.ontoware.rdf2go.model.node.Resource.class);
	}

	/**
	 * @param model an RDF2Go model
	 * @return all instances of this class in Model 'model' as a ReactorResult,
	 * which can conveniently be converted to iterator, list or array.
	 *
	 * [Generated from RDFReactor template rule #class3-as] 
	 */
	public static ReactorResult<? extends Artifact> getAllInstances_as(Model model) {
		return Base.getAllInstances_as(model, RDFS_CLASS, Artifact.class );
	}

    /**
	 * Remove rdf:type Artifact from this instance. Other triples are not affected.
	 * To delete more, use deleteAllProperties
	 * @param model an RDF2Go model
	 * @param instanceResource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #class4] 
	 */
	public static void deleteInstance(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		Base.deleteInstance(model, RDFS_CLASS, instanceResource);
	}

	/**
	 * Delete all (this, *, *), i.e. including rdf:type
	 * @param model an RDF2Go model
	 * @param resource
	 */
	public static void deleteAllProperties(Model model,	org.ontoware.rdf2go.model.node.Resource instanceResource) {
		Base.deleteAllProperties(model, instanceResource);
	}

    ///////////////////////////////////////////////////////////////////
    // property access methods

	/**
	 * @param model an RDF2Go model
	 * @param objectValue
	 * @return all A's as RDF resources, that have a relation 'Used_' to this Artifact instance
	 *
	 * [Generated from RDFReactor template rule #getallinverse1static] 
	 */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Resource> getAllUsed__Inverse( Model model, Object objectValue) {
		return Base.getAll_Inverse(model, Process.USED_, objectValue);
	}

	/**
	 * @return all A's as RDF resources, that have a relation 'Used_' to this Artifact instance
	 *
	 * [Generated from RDFReactor template rule #getallinverse1dynamic] 
	 */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Resource> getAllUsed__Inverse() {
		return Base.getAll_Inverse(this.model, Process.USED_, this.getResource() );
	}

	/**
	 * @param model an RDF2Go model
	 * @param objectValue
	 * @return all A's as a ReactorResult, that have a relation 'Used_' to this Artifact instance
	 *
	 * [Generated from RDFReactor template rule #getallinverse-as1static] 
	 */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Resource> getAllUsed__Inverse_as( Model model, Object objectValue) {
		return Base.getAll_Inverse_as(model, Process.USED_, objectValue, org.ontoware.rdf2go.model.node.Resource.class);
	}


	/**
	 * @param model an RDF2Go model
	 * @param objectValue
	 * @return all A's as RDF resources, that have a relation 'HasArtifact' to this Artifact instance
	 *
	 * [Generated from RDFReactor template rule #getallinverse1static] 
	 */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Resource> getAllHasArtifact_Inverse( Model model, Object objectValue) {
		return Base.getAll_Inverse(model, OPMGraph.HASARTIFACT, objectValue);
	}

	/**
	 * @return all A's as RDF resources, that have a relation 'HasArtifact' to this Artifact instance
	 *
	 * [Generated from RDFReactor template rule #getallinverse1dynamic] 
	 */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Resource> getAllHasArtifact_Inverse() {
		return Base.getAll_Inverse(this.model, OPMGraph.HASARTIFACT, this.getResource() );
	}

	/**
	 * @param model an RDF2Go model
	 * @param objectValue
	 * @return all A's as a ReactorResult, that have a relation 'HasArtifact' to this Artifact instance
	 *
	 * [Generated from RDFReactor template rule #getallinverse-as1static] 
	 */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Resource> getAllHasArtifact_Inverse_as( Model model, Object objectValue) {
		return Base.getAll_Inverse_as(model, OPMGraph.HASARTIFACT, objectValue, org.ontoware.rdf2go.model.node.Resource.class);
	}


	/**
	 * @param model an RDF2Go model
	 * @param objectValue
	 * @return all A's as RDF resources, that have a relation 'SessionGeneratedArtifacts' to this Artifact instance
	 *
	 * [Generated from RDFReactor template rule #getallinverse1static] 
	 */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Resource> getAllSessionGeneratedArtifacts_Inverse( Model model, Object objectValue) {
		return Base.getAll_Inverse(model, OPMGraph.SESSIONGENERATEDARTIFACTS, objectValue);
	}

	/**
	 * @return all A's as RDF resources, that have a relation 'SessionGeneratedArtifacts' to this Artifact instance
	 *
	 * [Generated from RDFReactor template rule #getallinverse1dynamic] 
	 */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Resource> getAllSessionGeneratedArtifacts_Inverse() {
		return Base.getAll_Inverse(this.model, OPMGraph.SESSIONGENERATEDARTIFACTS, this.getResource() );
	}

	/**
	 * @param model an RDF2Go model
	 * @param objectValue
	 * @return all A's as a ReactorResult, that have a relation 'SessionGeneratedArtifacts' to this Artifact instance
	 *
	 * [Generated from RDFReactor template rule #getallinverse-as1static] 
	 */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Resource> getAllSessionGeneratedArtifacts_Inverse_as( Model model, Object objectValue) {
		return Base.getAll_Inverse_as(model, OPMGraph.SESSIONGENERATEDARTIFACTS, objectValue, org.ontoware.rdf2go.model.node.Resource.class);
	}


	/**
	 * @param model an RDF2Go model
	 * @param objectValue
	 * @return all A's as RDF resources, that have a relation 'SessionUsedArtifacts' to this Artifact instance
	 *
	 * [Generated from RDFReactor template rule #getallinverse1static] 
	 */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Resource> getAllSessionUsedArtifacts_Inverse( Model model, Object objectValue) {
		return Base.getAll_Inverse(model, OPMGraph.SESSIONUSEDARTIFACTS, objectValue);
	}

	/**
	 * @return all A's as RDF resources, that have a relation 'SessionUsedArtifacts' to this Artifact instance
	 *
	 * [Generated from RDFReactor template rule #getallinverse1dynamic] 
	 */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Resource> getAllSessionUsedArtifacts_Inverse() {
		return Base.getAll_Inverse(this.model, OPMGraph.SESSIONUSEDARTIFACTS, this.getResource() );
	}

	/**
	 * @param model an RDF2Go model
	 * @param objectValue
	 * @return all A's as a ReactorResult, that have a relation 'SessionUsedArtifacts' to this Artifact instance
	 *
	 * [Generated from RDFReactor template rule #getallinverse-as1static] 
	 */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Resource> getAllSessionUsedArtifacts_Inverse_as( Model model, Object objectValue) {
		return Base.getAll_Inverse_as(model, OPMGraph.SESSIONUSEDARTIFACTS, objectValue, org.ontoware.rdf2go.model.node.Resource.class);
	}


	/**
	 * @param model an RDF2Go model
	 * @param objectValue
	 * @return all A's as RDF resources, that have a relation 'CauseWasDerivedFrom' to this Artifact instance
	 *
	 * [Generated from RDFReactor template rule #getallinverse1static] 
	 */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Resource> getAllCauseWasDerivedFrom_Inverse( Model model, Object objectValue) {
		return Base.getAll_Inverse(model, WasDerivedFrom.CAUSEWASDERIVEDFROM, objectValue);
	}

	/**
	 * @return all A's as RDF resources, that have a relation 'CauseWasDerivedFrom' to this Artifact instance
	 *
	 * [Generated from RDFReactor template rule #getallinverse1dynamic] 
	 */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Resource> getAllCauseWasDerivedFrom_Inverse() {
		return Base.getAll_Inverse(this.model, WasDerivedFrom.CAUSEWASDERIVEDFROM, this.getResource() );
	}

	/**
	 * @param model an RDF2Go model
	 * @param objectValue
	 * @return all A's as a ReactorResult, that have a relation 'CauseWasDerivedFrom' to this Artifact instance
	 *
	 * [Generated from RDFReactor template rule #getallinverse-as1static] 
	 */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Resource> getAllCauseWasDerivedFrom_Inverse_as( Model model, Object objectValue) {
		return Base.getAll_Inverse_as(model, WasDerivedFrom.CAUSEWASDERIVEDFROM, objectValue, org.ontoware.rdf2go.model.node.Resource.class);
	}


	/**
	 * @param model an RDF2Go model
	 * @param objectValue
	 * @return all A's as RDF resources, that have a relation 'EffectWasDerivedFrom' to this Artifact instance
	 *
	 * [Generated from RDFReactor template rule #getallinverse1static] 
	 */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Resource> getAllEffectWasDerivedFrom_Inverse( Model model, Object objectValue) {
		return Base.getAll_Inverse(model, WasDerivedFrom.EFFECTWASDERIVEDFROM, objectValue);
	}

	/**
	 * @return all A's as RDF resources, that have a relation 'EffectWasDerivedFrom' to this Artifact instance
	 *
	 * [Generated from RDFReactor template rule #getallinverse1dynamic] 
	 */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Resource> getAllEffectWasDerivedFrom_Inverse() {
		return Base.getAll_Inverse(this.model, WasDerivedFrom.EFFECTWASDERIVEDFROM, this.getResource() );
	}

	/**
	 * @param model an RDF2Go model
	 * @param objectValue
	 * @return all A's as a ReactorResult, that have a relation 'EffectWasDerivedFrom' to this Artifact instance
	 *
	 * [Generated from RDFReactor template rule #getallinverse-as1static] 
	 */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Resource> getAllEffectWasDerivedFrom_Inverse_as( Model model, Object objectValue) {
		return Base.getAll_Inverse_as(model, WasDerivedFrom.EFFECTWASDERIVEDFROM, objectValue, org.ontoware.rdf2go.model.node.Resource.class);
	}


	/**
	 * @param model an RDF2Go model
	 * @param objectValue
	 * @return all A's as RDF resources, that have a relation 'EffectWasGeneratedBy' to this Artifact instance
	 *
	 * [Generated from RDFReactor template rule #getallinverse1static] 
	 */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Resource> getAllEffectWasGeneratedBy_Inverse( Model model, Object objectValue) {
		return Base.getAll_Inverse(model, WasGeneratedBy.EFFECTWASGENERATEDBY, objectValue);
	}

	/**
	 * @return all A's as RDF resources, that have a relation 'EffectWasGeneratedBy' to this Artifact instance
	 *
	 * [Generated from RDFReactor template rule #getallinverse1dynamic] 
	 */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Resource> getAllEffectWasGeneratedBy_Inverse() {
		return Base.getAll_Inverse(this.model, WasGeneratedBy.EFFECTWASGENERATEDBY, this.getResource() );
	}

	/**
	 * @param model an RDF2Go model
	 * @param objectValue
	 * @return all A's as a ReactorResult, that have a relation 'EffectWasGeneratedBy' to this Artifact instance
	 *
	 * [Generated from RDFReactor template rule #getallinverse-as1static] 
	 */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Resource> getAllEffectWasGeneratedBy_Inverse_as( Model model, Object objectValue) {
		return Base.getAll_Inverse_as(model, WasGeneratedBy.EFFECTWASGENERATEDBY, objectValue, org.ontoware.rdf2go.model.node.Resource.class);
	}


	/**
	 * @param model an RDF2Go model
	 * @param objectValue
	 * @return all A's as RDF resources, that have a relation 'CauseUsed' to this Artifact instance
	 *
	 * [Generated from RDFReactor template rule #getallinverse1static] 
	 */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Resource> getAllCauseUsed_Inverse( Model model, Object objectValue) {
		return Base.getAll_Inverse(model, Used.CAUSEUSED, objectValue);
	}

	/**
	 * @return all A's as RDF resources, that have a relation 'CauseUsed' to this Artifact instance
	 *
	 * [Generated from RDFReactor template rule #getallinverse1dynamic] 
	 */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Resource> getAllCauseUsed_Inverse() {
		return Base.getAll_Inverse(this.model, Used.CAUSEUSED, this.getResource() );
	}

	/**
	 * @param model an RDF2Go model
	 * @param objectValue
	 * @return all A's as a ReactorResult, that have a relation 'CauseUsed' to this Artifact instance
	 *
	 * [Generated from RDFReactor template rule #getallinverse-as1static] 
	 */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Resource> getAllCauseUsed_Inverse_as( Model model, Object objectValue) {
		return Base.getAll_Inverse_as(model, Used.CAUSEUSED, objectValue, org.ontoware.rdf2go.model.node.Resource.class);
	}


	/**
	 * @param model an RDF2Go model
	 * @param objectValue
	 * @return all A's as RDF resources, that have a relation 'WasDerivedFrom_' to this Artifact instance
	 *
	 * [Generated from RDFReactor template rule #getallinverse1static] 
	 */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Resource> getAllWasDerivedFrom__Inverse( Model model, Object objectValue) {
		return Base.getAll_Inverse(model, Artifact.WASDERIVEDFROM_, objectValue);
	}

	/**
	 * @return all A's as RDF resources, that have a relation 'WasDerivedFrom_' to this Artifact instance
	 *
	 * [Generated from RDFReactor template rule #getallinverse1dynamic] 
	 */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Resource> getAllWasDerivedFrom__Inverse() {
		return Base.getAll_Inverse(this.model, Artifact.WASDERIVEDFROM_, this.getResource() );
	}

	/**
	 * @param model an RDF2Go model
	 * @param objectValue
	 * @return all A's as a ReactorResult, that have a relation 'WasDerivedFrom_' to this Artifact instance
	 *
	 * [Generated from RDFReactor template rule #getallinverse-as1static] 
	 */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Resource> getAllWasDerivedFrom__Inverse_as( Model model, Object objectValue) {
		return Base.getAll_Inverse_as(model, Artifact.WASDERIVEDFROM_, objectValue, org.ontoware.rdf2go.model.node.Resource.class);
	}



    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@5e65c6 has at least one value set 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-static] 
     */
	public static boolean hasAvalue(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.has(model, instanceResource, AVALUE);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@5e65c6 has at least one value set 
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-dynamic] 
     */
	public boolean hasAvalue() {
		return Base.has(this.model, this.getResource(), AVALUE);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@5e65c6 has the given value (maybe among other values).  
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-static] 
     */
	public static boolean hasAvalue(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(model, instanceResource, AVALUE, value);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@5e65c6 has the given value (maybe among other values).  
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-dynamic] 
     */
	public boolean hasAvalue( org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(this.model, this.getResource(), AVALUE, value);
	}

     /**
     * Get all values of property Avalue as an Iterator over RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static] 
     */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllAvalue_asNode(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_asNode(model, instanceResource, AVALUE);
	}
	
    /**
     * Get all values of property Avalue as a ReactorResult of RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static-reactor-result] 
     */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllAvalue_asNode_(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, AVALUE, org.ontoware.rdf2go.model.node.Node.class);
	}

    /**
     * Get all values of property Avalue as an Iterator over RDF2Go nodes 
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic] 
     */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllAvalue_asNode() {
		return Base.getAll_asNode(this.model, this.getResource(), AVALUE);
	}

    /**
     * Get all values of property Avalue as a ReactorResult of RDF2Go nodes 
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic-reactor-result] 
     */
	public ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllAvalue_asNode_() {
		return Base.getAll_as(this.model, this.getResource(), AVALUE, org.ontoware.rdf2go.model.node.Node.class);
	}
     /**
     * Get all values of property Avalue     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get11static] 
     */
	public static ClosableIterator<AValue> getAllAvalue(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll(model, instanceResource, AVALUE, AValue.class);
	}
	
    /**
     * Get all values of property Avalue as a ReactorResult of AValue 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get11static-reactorresult] 
     */
	public static ReactorResult<AValue> getAllAvalue_as(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, AVALUE, AValue.class);
	}

    /**
     * Get all values of property Avalue     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get12dynamic] 
     */
	public ClosableIterator<AValue> getAllAvalue() {
		return Base.getAll(this.model, this.getResource(), AVALUE, AValue.class);
	}

    /**
     * Get all values of property Avalue as a ReactorResult of AValue 
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get12dynamic-reactorresult] 
     */
	public ReactorResult<AValue> getAllAvalue_as() {
		return Base.getAll_as(this.model, this.getResource(), AVALUE, AValue.class);
	}
 
    /**
     * Adds a value to property Avalue as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1static] 
     */
	public static void addAvalue( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.add(model, instanceResource, AVALUE, value);
	}
	
    /**
     * Adds a value to property Avalue as an RDF2Go node 
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1dynamic] 
     */
	public void addAvalue( org.ontoware.rdf2go.model.node.Node value) {
		Base.add(this.model, this.getResource(), AVALUE, value);
	}
    /**
     * Adds a value to property Avalue from an instance of AValue 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #add3static] 
     */
	public static void addAvalue(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, AValue value) {
		Base.add(model, instanceResource, AVALUE, value);
	}
	
    /**
     * Adds a value to property Avalue from an instance of AValue 
	 *
	 * [Generated from RDFReactor template rule #add4dynamic] 
     */
	public void addAvalue(AValue value) {
		Base.add(this.model, this.getResource(), AVALUE, value);
	}
  

    /**
     * Sets a value of property Avalue from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be set
	 *
	 * [Generated from RDFReactor template rule #set1static] 
     */
	public static void setAvalue( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.set(model, instanceResource, AVALUE, value);
	}
	
    /**
     * Sets a value of property Avalue from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set1dynamic] 
     */
	public void setAvalue( org.ontoware.rdf2go.model.node.Node value) {
		Base.set(this.model, this.getResource(), AVALUE, value);
	}
    /**
     * Sets a value of property Avalue from an instance of AValue 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set3static] 
     */
	public static void setAvalue(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, AValue value) {
		Base.set(model, instanceResource, AVALUE, value);
	}
	
    /**
     * Sets a value of property Avalue from an instance of AValue 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set4dynamic] 
     */
	public void setAvalue(AValue value) {
		Base.set(this.model, this.getResource(), AVALUE, value);
	}
  


    /**
     * Removes a value of property Avalue as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1static] 
     */
	public static void removeAvalue( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(model, instanceResource, AVALUE, value);
	}
	
    /**
     * Removes a value of property Avalue as an RDF2Go node
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1dynamic] 
     */
	public void removeAvalue( org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(this.model, this.getResource(), AVALUE, value);
	}
    /**
     * Removes a value of property Avalue given as an instance of AValue 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove3static] 
     */
	public static void removeAvalue(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, AValue value) {
		Base.remove(model, instanceResource, AVALUE, value);
	}
	
    /**
     * Removes a value of property Avalue given as an instance of AValue 
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove4dynamic] 
     */
	public void removeAvalue(AValue value) {
		Base.remove(this.model, this.getResource(), AVALUE, value);
	}
  
    /**
     * Removes all values of property Avalue     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #removeall1static] 
     */
	public static void removeAllAvalue( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		Base.removeAll(model, instanceResource, AVALUE);
	}
	
    /**
     * Removes all values of property Avalue	 *
	 * [Generated from RDFReactor template rule #removeall1dynamic] 
     */
	public void removeAllAvalue() {
		Base.removeAll(this.model, this.getResource(), AVALUE);
	}
     /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@c4ecda has at least one value set 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-static] 
     */
	public static boolean hasEffectWasDerivedFromInverse(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.has(model, instanceResource, EFFECTWASDERIVEDFROMINVERSE);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@c4ecda has at least one value set 
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-dynamic] 
     */
	public boolean hasEffectWasDerivedFromInverse() {
		return Base.has(this.model, this.getResource(), EFFECTWASDERIVEDFROMINVERSE);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@c4ecda has the given value (maybe among other values).  
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-static] 
     */
	public static boolean hasEffectWasDerivedFromInverse(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(model, instanceResource, EFFECTWASDERIVEDFROMINVERSE, value);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@c4ecda has the given value (maybe among other values).  
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-dynamic] 
     */
	public boolean hasEffectWasDerivedFromInverse( org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(this.model, this.getResource(), EFFECTWASDERIVEDFROMINVERSE, value);
	}

     /**
     * Get all values of property EffectWasDerivedFromInverse as an Iterator over RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static] 
     */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllEffectWasDerivedFromInverse_asNode(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_asNode(model, instanceResource, EFFECTWASDERIVEDFROMINVERSE);
	}
	
    /**
     * Get all values of property EffectWasDerivedFromInverse as a ReactorResult of RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static-reactor-result] 
     */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllEffectWasDerivedFromInverse_asNode_(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, EFFECTWASDERIVEDFROMINVERSE, org.ontoware.rdf2go.model.node.Node.class);
	}

    /**
     * Get all values of property EffectWasDerivedFromInverse as an Iterator over RDF2Go nodes 
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic] 
     */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllEffectWasDerivedFromInverse_asNode() {
		return Base.getAll_asNode(this.model, this.getResource(), EFFECTWASDERIVEDFROMINVERSE);
	}

    /**
     * Get all values of property EffectWasDerivedFromInverse as a ReactorResult of RDF2Go nodes 
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic-reactor-result] 
     */
	public ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllEffectWasDerivedFromInverse_asNode_() {
		return Base.getAll_as(this.model, this.getResource(), EFFECTWASDERIVEDFROMINVERSE, org.ontoware.rdf2go.model.node.Node.class);
	}
     /**
     * Get all values of property EffectWasDerivedFromInverse     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get11static] 
     */
	public static ClosableIterator<WasDerivedFrom> getAllEffectWasDerivedFromInverse(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll(model, instanceResource, EFFECTWASDERIVEDFROMINVERSE, WasDerivedFrom.class);
	}
	
    /**
     * Get all values of property EffectWasDerivedFromInverse as a ReactorResult of WasDerivedFrom 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get11static-reactorresult] 
     */
	public static ReactorResult<WasDerivedFrom> getAllEffectWasDerivedFromInverse_as(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, EFFECTWASDERIVEDFROMINVERSE, WasDerivedFrom.class);
	}

    /**
     * Get all values of property EffectWasDerivedFromInverse     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get12dynamic] 
     */
	public ClosableIterator<WasDerivedFrom> getAllEffectWasDerivedFromInverse() {
		return Base.getAll(this.model, this.getResource(), EFFECTWASDERIVEDFROMINVERSE, WasDerivedFrom.class);
	}

    /**
     * Get all values of property EffectWasDerivedFromInverse as a ReactorResult of WasDerivedFrom 
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get12dynamic-reactorresult] 
     */
	public ReactorResult<WasDerivedFrom> getAllEffectWasDerivedFromInverse_as() {
		return Base.getAll_as(this.model, this.getResource(), EFFECTWASDERIVEDFROMINVERSE, WasDerivedFrom.class);
	}
 
    /**
     * Adds a value to property EffectWasDerivedFromInverse as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1static] 
     */
	public static void addEffectWasDerivedFromInverse( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.add(model, instanceResource, EFFECTWASDERIVEDFROMINVERSE, value);
	}
	
    /**
     * Adds a value to property EffectWasDerivedFromInverse as an RDF2Go node 
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1dynamic] 
     */
	public void addEffectWasDerivedFromInverse( org.ontoware.rdf2go.model.node.Node value) {
		Base.add(this.model, this.getResource(), EFFECTWASDERIVEDFROMINVERSE, value);
	}
    /**
     * Adds a value to property EffectWasDerivedFromInverse from an instance of WasDerivedFrom 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #add3static] 
     */
	public static void addEffectWasDerivedFromInverse(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, WasDerivedFrom value) {
		Base.add(model, instanceResource, EFFECTWASDERIVEDFROMINVERSE, value);
	}
	
    /**
     * Adds a value to property EffectWasDerivedFromInverse from an instance of WasDerivedFrom 
	 *
	 * [Generated from RDFReactor template rule #add4dynamic] 
     */
	public void addEffectWasDerivedFromInverse(WasDerivedFrom value) {
		Base.add(this.model, this.getResource(), EFFECTWASDERIVEDFROMINVERSE, value);
	}
  

    /**
     * Sets a value of property EffectWasDerivedFromInverse from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be set
	 *
	 * [Generated from RDFReactor template rule #set1static] 
     */
	public static void setEffectWasDerivedFromInverse( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.set(model, instanceResource, EFFECTWASDERIVEDFROMINVERSE, value);
	}
	
    /**
     * Sets a value of property EffectWasDerivedFromInverse from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set1dynamic] 
     */
	public void setEffectWasDerivedFromInverse( org.ontoware.rdf2go.model.node.Node value) {
		Base.set(this.model, this.getResource(), EFFECTWASDERIVEDFROMINVERSE, value);
	}
    /**
     * Sets a value of property EffectWasDerivedFromInverse from an instance of WasDerivedFrom 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set3static] 
     */
	public static void setEffectWasDerivedFromInverse(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, WasDerivedFrom value) {
		Base.set(model, instanceResource, EFFECTWASDERIVEDFROMINVERSE, value);
	}
	
    /**
     * Sets a value of property EffectWasDerivedFromInverse from an instance of WasDerivedFrom 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set4dynamic] 
     */
	public void setEffectWasDerivedFromInverse(WasDerivedFrom value) {
		Base.set(this.model, this.getResource(), EFFECTWASDERIVEDFROMINVERSE, value);
	}
  


    /**
     * Removes a value of property EffectWasDerivedFromInverse as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1static] 
     */
	public static void removeEffectWasDerivedFromInverse( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(model, instanceResource, EFFECTWASDERIVEDFROMINVERSE, value);
	}
	
    /**
     * Removes a value of property EffectWasDerivedFromInverse as an RDF2Go node
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1dynamic] 
     */
	public void removeEffectWasDerivedFromInverse( org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(this.model, this.getResource(), EFFECTWASDERIVEDFROMINVERSE, value);
	}
    /**
     * Removes a value of property EffectWasDerivedFromInverse given as an instance of WasDerivedFrom 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove3static] 
     */
	public static void removeEffectWasDerivedFromInverse(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, WasDerivedFrom value) {
		Base.remove(model, instanceResource, EFFECTWASDERIVEDFROMINVERSE, value);
	}
	
    /**
     * Removes a value of property EffectWasDerivedFromInverse given as an instance of WasDerivedFrom 
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove4dynamic] 
     */
	public void removeEffectWasDerivedFromInverse(WasDerivedFrom value) {
		Base.remove(this.model, this.getResource(), EFFECTWASDERIVEDFROMINVERSE, value);
	}
  
    /**
     * Removes all values of property EffectWasDerivedFromInverse     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #removeall1static] 
     */
	public static void removeAllEffectWasDerivedFromInverse( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		Base.removeAll(model, instanceResource, EFFECTWASDERIVEDFROMINVERSE);
	}
	
    /**
     * Removes all values of property EffectWasDerivedFromInverse	 *
	 * [Generated from RDFReactor template rule #removeall1dynamic] 
     */
	public void removeAllEffectWasDerivedFromInverse() {
		Base.removeAll(this.model, this.getResource(), EFFECTWASDERIVEDFROMINVERSE);
	}
     /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@3f9952 has at least one value set 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-static] 
     */
	public static boolean hasEffectWasGeneratedByInverse(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.has(model, instanceResource, EFFECTWASGENERATEDBYINVERSE);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@3f9952 has at least one value set 
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-dynamic] 
     */
	public boolean hasEffectWasGeneratedByInverse() {
		return Base.has(this.model, this.getResource(), EFFECTWASGENERATEDBYINVERSE);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@3f9952 has the given value (maybe among other values).  
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-static] 
     */
	public static boolean hasEffectWasGeneratedByInverse(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(model, instanceResource, EFFECTWASGENERATEDBYINVERSE, value);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@3f9952 has the given value (maybe among other values).  
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-dynamic] 
     */
	public boolean hasEffectWasGeneratedByInverse( org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(this.model, this.getResource(), EFFECTWASGENERATEDBYINVERSE, value);
	}

     /**
     * Get all values of property EffectWasGeneratedByInverse as an Iterator over RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static] 
     */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllEffectWasGeneratedByInverse_asNode(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_asNode(model, instanceResource, EFFECTWASGENERATEDBYINVERSE);
	}
	
    /**
     * Get all values of property EffectWasGeneratedByInverse as a ReactorResult of RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static-reactor-result] 
     */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllEffectWasGeneratedByInverse_asNode_(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, EFFECTWASGENERATEDBYINVERSE, org.ontoware.rdf2go.model.node.Node.class);
	}

    /**
     * Get all values of property EffectWasGeneratedByInverse as an Iterator over RDF2Go nodes 
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic] 
     */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllEffectWasGeneratedByInverse_asNode() {
		return Base.getAll_asNode(this.model, this.getResource(), EFFECTWASGENERATEDBYINVERSE);
	}

    /**
     * Get all values of property EffectWasGeneratedByInverse as a ReactorResult of RDF2Go nodes 
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic-reactor-result] 
     */
	public ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllEffectWasGeneratedByInverse_asNode_() {
		return Base.getAll_as(this.model, this.getResource(), EFFECTWASGENERATEDBYINVERSE, org.ontoware.rdf2go.model.node.Node.class);
	}
     /**
     * Get all values of property EffectWasGeneratedByInverse     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get11static] 
     */
	public static ClosableIterator<WasGeneratedBy> getAllEffectWasGeneratedByInverse(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll(model, instanceResource, EFFECTWASGENERATEDBYINVERSE, WasGeneratedBy.class);
	}
	
    /**
     * Get all values of property EffectWasGeneratedByInverse as a ReactorResult of WasGeneratedBy 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get11static-reactorresult] 
     */
	public static ReactorResult<WasGeneratedBy> getAllEffectWasGeneratedByInverse_as(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, EFFECTWASGENERATEDBYINVERSE, WasGeneratedBy.class);
	}

    /**
     * Get all values of property EffectWasGeneratedByInverse     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get12dynamic] 
     */
	public ClosableIterator<WasGeneratedBy> getAllEffectWasGeneratedByInverse() {
		return Base.getAll(this.model, this.getResource(), EFFECTWASGENERATEDBYINVERSE, WasGeneratedBy.class);
	}

    /**
     * Get all values of property EffectWasGeneratedByInverse as a ReactorResult of WasGeneratedBy 
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get12dynamic-reactorresult] 
     */
	public ReactorResult<WasGeneratedBy> getAllEffectWasGeneratedByInverse_as() {
		return Base.getAll_as(this.model, this.getResource(), EFFECTWASGENERATEDBYINVERSE, WasGeneratedBy.class);
	}
 
    /**
     * Adds a value to property EffectWasGeneratedByInverse as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1static] 
     */
	public static void addEffectWasGeneratedByInverse( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.add(model, instanceResource, EFFECTWASGENERATEDBYINVERSE, value);
	}
	
    /**
     * Adds a value to property EffectWasGeneratedByInverse as an RDF2Go node 
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1dynamic] 
     */
	public void addEffectWasGeneratedByInverse( org.ontoware.rdf2go.model.node.Node value) {
		Base.add(this.model, this.getResource(), EFFECTWASGENERATEDBYINVERSE, value);
	}
    /**
     * Adds a value to property EffectWasGeneratedByInverse from an instance of WasGeneratedBy 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #add3static] 
     */
	public static void addEffectWasGeneratedByInverse(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, WasGeneratedBy value) {
		Base.add(model, instanceResource, EFFECTWASGENERATEDBYINVERSE, value);
	}
	
    /**
     * Adds a value to property EffectWasGeneratedByInverse from an instance of WasGeneratedBy 
	 *
	 * [Generated from RDFReactor template rule #add4dynamic] 
     */
	public void addEffectWasGeneratedByInverse(WasGeneratedBy value) {
		Base.add(this.model, this.getResource(), EFFECTWASGENERATEDBYINVERSE, value);
	}
  

    /**
     * Sets a value of property EffectWasGeneratedByInverse from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be set
	 *
	 * [Generated from RDFReactor template rule #set1static] 
     */
	public static void setEffectWasGeneratedByInverse( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.set(model, instanceResource, EFFECTWASGENERATEDBYINVERSE, value);
	}
	
    /**
     * Sets a value of property EffectWasGeneratedByInverse from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set1dynamic] 
     */
	public void setEffectWasGeneratedByInverse( org.ontoware.rdf2go.model.node.Node value) {
		Base.set(this.model, this.getResource(), EFFECTWASGENERATEDBYINVERSE, value);
	}
    /**
     * Sets a value of property EffectWasGeneratedByInverse from an instance of WasGeneratedBy 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set3static] 
     */
	public static void setEffectWasGeneratedByInverse(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, WasGeneratedBy value) {
		Base.set(model, instanceResource, EFFECTWASGENERATEDBYINVERSE, value);
	}
	
    /**
     * Sets a value of property EffectWasGeneratedByInverse from an instance of WasGeneratedBy 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set4dynamic] 
     */
	public void setEffectWasGeneratedByInverse(WasGeneratedBy value) {
		Base.set(this.model, this.getResource(), EFFECTWASGENERATEDBYINVERSE, value);
	}
  


    /**
     * Removes a value of property EffectWasGeneratedByInverse as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1static] 
     */
	public static void removeEffectWasGeneratedByInverse( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(model, instanceResource, EFFECTWASGENERATEDBYINVERSE, value);
	}
	
    /**
     * Removes a value of property EffectWasGeneratedByInverse as an RDF2Go node
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1dynamic] 
     */
	public void removeEffectWasGeneratedByInverse( org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(this.model, this.getResource(), EFFECTWASGENERATEDBYINVERSE, value);
	}
    /**
     * Removes a value of property EffectWasGeneratedByInverse given as an instance of WasGeneratedBy 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove3static] 
     */
	public static void removeEffectWasGeneratedByInverse(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, WasGeneratedBy value) {
		Base.remove(model, instanceResource, EFFECTWASGENERATEDBYINVERSE, value);
	}
	
    /**
     * Removes a value of property EffectWasGeneratedByInverse given as an instance of WasGeneratedBy 
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove4dynamic] 
     */
	public void removeEffectWasGeneratedByInverse(WasGeneratedBy value) {
		Base.remove(this.model, this.getResource(), EFFECTWASGENERATEDBYINVERSE, value);
	}
  
    /**
     * Removes all values of property EffectWasGeneratedByInverse     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #removeall1static] 
     */
	public static void removeAllEffectWasGeneratedByInverse( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		Base.removeAll(model, instanceResource, EFFECTWASGENERATEDBYINVERSE);
	}
	
    /**
     * Removes all values of property EffectWasGeneratedByInverse	 *
	 * [Generated from RDFReactor template rule #removeall1dynamic] 
     */
	public void removeAllEffectWasGeneratedByInverse() {
		Base.removeAll(this.model, this.getResource(), EFFECTWASGENERATEDBYINVERSE);
	}
     /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@64c7c9 has at least one value set 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-static] 
     */
	public static boolean hasWasDerivedFrom_(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.has(model, instanceResource, WASDERIVEDFROM_);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@64c7c9 has at least one value set 
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-dynamic] 
     */
	public boolean hasWasDerivedFrom_() {
		return Base.has(this.model, this.getResource(), WASDERIVEDFROM_);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@64c7c9 has the given value (maybe among other values).  
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-static] 
     */
	public static boolean hasWasDerivedFrom_(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(model, instanceResource, WASDERIVEDFROM_, value);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@64c7c9 has the given value (maybe among other values).  
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-dynamic] 
     */
	public boolean hasWasDerivedFrom_( org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(this.model, this.getResource(), WASDERIVEDFROM_, value);
	}

     /**
     * Get all values of property WasDerivedFrom_ as an Iterator over RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static] 
     */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllWasDerivedFrom__asNode(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_asNode(model, instanceResource, WASDERIVEDFROM_);
	}
	
    /**
     * Get all values of property WasDerivedFrom_ as a ReactorResult of RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static-reactor-result] 
     */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllWasDerivedFrom__asNode_(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, WASDERIVEDFROM_, org.ontoware.rdf2go.model.node.Node.class);
	}

    /**
     * Get all values of property WasDerivedFrom_ as an Iterator over RDF2Go nodes 
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic] 
     */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllWasDerivedFrom__asNode() {
		return Base.getAll_asNode(this.model, this.getResource(), WASDERIVEDFROM_);
	}

    /**
     * Get all values of property WasDerivedFrom_ as a ReactorResult of RDF2Go nodes 
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic-reactor-result] 
     */
	public ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllWasDerivedFrom__asNode_() {
		return Base.getAll_as(this.model, this.getResource(), WASDERIVEDFROM_, org.ontoware.rdf2go.model.node.Node.class);
	}
     /**
     * Get all values of property WasDerivedFrom_     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get11static] 
     */
	public static ClosableIterator<Artifact> getAllWasDerivedFrom_(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll(model, instanceResource, WASDERIVEDFROM_, Artifact.class);
	}
	
    /**
     * Get all values of property WasDerivedFrom_ as a ReactorResult of Artifact 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get11static-reactorresult] 
     */
	public static ReactorResult<Artifact> getAllWasDerivedFrom__as(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, WASDERIVEDFROM_, Artifact.class);
	}

    /**
     * Get all values of property WasDerivedFrom_     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get12dynamic] 
     */
	public ClosableIterator<Artifact> getAllWasDerivedFrom_() {
		return Base.getAll(this.model, this.getResource(), WASDERIVEDFROM_, Artifact.class);
	}

    /**
     * Get all values of property WasDerivedFrom_ as a ReactorResult of Artifact 
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get12dynamic-reactorresult] 
     */
	public ReactorResult<Artifact> getAllWasDerivedFrom__as() {
		return Base.getAll_as(this.model, this.getResource(), WASDERIVEDFROM_, Artifact.class);
	}
 
    /**
     * Adds a value to property WasDerivedFrom_ as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1static] 
     */
	public static void addWasDerivedFrom_( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.add(model, instanceResource, WASDERIVEDFROM_, value);
	}
	
    /**
     * Adds a value to property WasDerivedFrom_ as an RDF2Go node 
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1dynamic] 
     */
	public void addWasDerivedFrom_( org.ontoware.rdf2go.model.node.Node value) {
		Base.add(this.model, this.getResource(), WASDERIVEDFROM_, value);
	}
    /**
     * Adds a value to property WasDerivedFrom_ from an instance of Artifact 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #add3static] 
     */
	public static void addWasDerivedFrom_(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, Artifact value) {
		Base.add(model, instanceResource, WASDERIVEDFROM_, value);
	}
	
    /**
     * Adds a value to property WasDerivedFrom_ from an instance of Artifact 
	 *
	 * [Generated from RDFReactor template rule #add4dynamic] 
     */
	public void addWasDerivedFrom_(Artifact value) {
		Base.add(this.model, this.getResource(), WASDERIVEDFROM_, value);
	}
  

    /**
     * Sets a value of property WasDerivedFrom_ from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be set
	 *
	 * [Generated from RDFReactor template rule #set1static] 
     */
	public static void setWasDerivedFrom_( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.set(model, instanceResource, WASDERIVEDFROM_, value);
	}
	
    /**
     * Sets a value of property WasDerivedFrom_ from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set1dynamic] 
     */
	public void setWasDerivedFrom_( org.ontoware.rdf2go.model.node.Node value) {
		Base.set(this.model, this.getResource(), WASDERIVEDFROM_, value);
	}
    /**
     * Sets a value of property WasDerivedFrom_ from an instance of Artifact 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set3static] 
     */
	public static void setWasDerivedFrom_(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, Artifact value) {
		Base.set(model, instanceResource, WASDERIVEDFROM_, value);
	}
	
    /**
     * Sets a value of property WasDerivedFrom_ from an instance of Artifact 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set4dynamic] 
     */
	public void setWasDerivedFrom_(Artifact value) {
		Base.set(this.model, this.getResource(), WASDERIVEDFROM_, value);
	}
  


    /**
     * Removes a value of property WasDerivedFrom_ as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1static] 
     */
	public static void removeWasDerivedFrom_( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(model, instanceResource, WASDERIVEDFROM_, value);
	}
	
    /**
     * Removes a value of property WasDerivedFrom_ as an RDF2Go node
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1dynamic] 
     */
	public void removeWasDerivedFrom_( org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(this.model, this.getResource(), WASDERIVEDFROM_, value);
	}
    /**
     * Removes a value of property WasDerivedFrom_ given as an instance of Artifact 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove3static] 
     */
	public static void removeWasDerivedFrom_(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, Artifact value) {
		Base.remove(model, instanceResource, WASDERIVEDFROM_, value);
	}
	
    /**
     * Removes a value of property WasDerivedFrom_ given as an instance of Artifact 
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove4dynamic] 
     */
	public void removeWasDerivedFrom_(Artifact value) {
		Base.remove(this.model, this.getResource(), WASDERIVEDFROM_, value);
	}
  
    /**
     * Removes all values of property WasDerivedFrom_     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #removeall1static] 
     */
	public static void removeAllWasDerivedFrom_( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		Base.removeAll(model, instanceResource, WASDERIVEDFROM_);
	}
	
    /**
     * Removes all values of property WasDerivedFrom_	 *
	 * [Generated from RDFReactor template rule #removeall1dynamic] 
     */
	public void removeAllWasDerivedFrom_() {
		Base.removeAll(this.model, this.getResource(), WASDERIVEDFROM_);
	}
     /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@b981c0 has at least one value set 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-static] 
     */
	public static boolean hasWasGeneratedBy_(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.has(model, instanceResource, WASGENERATEDBY_);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@b981c0 has at least one value set 
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-dynamic] 
     */
	public boolean hasWasGeneratedBy_() {
		return Base.has(this.model, this.getResource(), WASGENERATEDBY_);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@b981c0 has the given value (maybe among other values).  
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-static] 
     */
	public static boolean hasWasGeneratedBy_(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(model, instanceResource, WASGENERATEDBY_, value);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@b981c0 has the given value (maybe among other values).  
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-dynamic] 
     */
	public boolean hasWasGeneratedBy_( org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(this.model, this.getResource(), WASGENERATEDBY_, value);
	}

     /**
     * Get all values of property WasGeneratedBy_ as an Iterator over RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static] 
     */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllWasGeneratedBy__asNode(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_asNode(model, instanceResource, WASGENERATEDBY_);
	}
	
    /**
     * Get all values of property WasGeneratedBy_ as a ReactorResult of RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static-reactor-result] 
     */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllWasGeneratedBy__asNode_(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, WASGENERATEDBY_, org.ontoware.rdf2go.model.node.Node.class);
	}

    /**
     * Get all values of property WasGeneratedBy_ as an Iterator over RDF2Go nodes 
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic] 
     */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllWasGeneratedBy__asNode() {
		return Base.getAll_asNode(this.model, this.getResource(), WASGENERATEDBY_);
	}

    /**
     * Get all values of property WasGeneratedBy_ as a ReactorResult of RDF2Go nodes 
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic-reactor-result] 
     */
	public ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllWasGeneratedBy__asNode_() {
		return Base.getAll_as(this.model, this.getResource(), WASGENERATEDBY_, org.ontoware.rdf2go.model.node.Node.class);
	}
     /**
     * Get all values of property WasGeneratedBy_     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get11static] 
     */
	public static ClosableIterator<Process> getAllWasGeneratedBy_(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll(model, instanceResource, WASGENERATEDBY_, Process.class);
	}
	
    /**
     * Get all values of property WasGeneratedBy_ as a ReactorResult of Process 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get11static-reactorresult] 
     */
	public static ReactorResult<Process> getAllWasGeneratedBy__as(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, WASGENERATEDBY_, Process.class);
	}

    /**
     * Get all values of property WasGeneratedBy_     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get12dynamic] 
     */
	public ClosableIterator<Process> getAllWasGeneratedBy_() {
		return Base.getAll(this.model, this.getResource(), WASGENERATEDBY_, Process.class);
	}

    /**
     * Get all values of property WasGeneratedBy_ as a ReactorResult of Process 
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get12dynamic-reactorresult] 
     */
	public ReactorResult<Process> getAllWasGeneratedBy__as() {
		return Base.getAll_as(this.model, this.getResource(), WASGENERATEDBY_, Process.class);
	}
 
    /**
     * Adds a value to property WasGeneratedBy_ as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1static] 
     */
	public static void addWasGeneratedBy_( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.add(model, instanceResource, WASGENERATEDBY_, value);
	}
	
    /**
     * Adds a value to property WasGeneratedBy_ as an RDF2Go node 
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1dynamic] 
     */
	public void addWasGeneratedBy_( org.ontoware.rdf2go.model.node.Node value) {
		Base.add(this.model, this.getResource(), WASGENERATEDBY_, value);
	}
    /**
     * Adds a value to property WasGeneratedBy_ from an instance of Process 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #add3static] 
     */
	public static void addWasGeneratedBy_(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, Process value) {
		Base.add(model, instanceResource, WASGENERATEDBY_, value);
	}
	
    /**
     * Adds a value to property WasGeneratedBy_ from an instance of Process 
	 *
	 * [Generated from RDFReactor template rule #add4dynamic] 
     */
	public void addWasGeneratedBy_(Process value) {
		Base.add(this.model, this.getResource(), WASGENERATEDBY_, value);
	}
  

    /**
     * Sets a value of property WasGeneratedBy_ from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be set
	 *
	 * [Generated from RDFReactor template rule #set1static] 
     */
	public static void setWasGeneratedBy_( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.set(model, instanceResource, WASGENERATEDBY_, value);
	}
	
    /**
     * Sets a value of property WasGeneratedBy_ from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set1dynamic] 
     */
	public void setWasGeneratedBy_( org.ontoware.rdf2go.model.node.Node value) {
		Base.set(this.model, this.getResource(), WASGENERATEDBY_, value);
	}
    /**
     * Sets a value of property WasGeneratedBy_ from an instance of Process 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set3static] 
     */
	public static void setWasGeneratedBy_(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, Process value) {
		Base.set(model, instanceResource, WASGENERATEDBY_, value);
	}
	
    /**
     * Sets a value of property WasGeneratedBy_ from an instance of Process 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set4dynamic] 
     */
	public void setWasGeneratedBy_(Process value) {
		Base.set(this.model, this.getResource(), WASGENERATEDBY_, value);
	}
  


    /**
     * Removes a value of property WasGeneratedBy_ as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1static] 
     */
	public static void removeWasGeneratedBy_( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(model, instanceResource, WASGENERATEDBY_, value);
	}
	
    /**
     * Removes a value of property WasGeneratedBy_ as an RDF2Go node
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1dynamic] 
     */
	public void removeWasGeneratedBy_( org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(this.model, this.getResource(), WASGENERATEDBY_, value);
	}
    /**
     * Removes a value of property WasGeneratedBy_ given as an instance of Process 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove3static] 
     */
	public static void removeWasGeneratedBy_(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, Process value) {
		Base.remove(model, instanceResource, WASGENERATEDBY_, value);
	}
	
    /**
     * Removes a value of property WasGeneratedBy_ given as an instance of Process 
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove4dynamic] 
     */
	public void removeWasGeneratedBy_(Process value) {
		Base.remove(this.model, this.getResource(), WASGENERATEDBY_, value);
	}
  
    /**
     * Removes all values of property WasGeneratedBy_     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #removeall1static] 
     */
	public static void removeAllWasGeneratedBy_( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		Base.removeAll(model, instanceResource, WASGENERATEDBY_);
	}
	
    /**
     * Removes all values of property WasGeneratedBy_	 *
	 * [Generated from RDFReactor template rule #removeall1dynamic] 
     */
	public void removeAllWasGeneratedBy_() {
		Base.removeAll(this.model, this.getResource(), WASGENERATEDBY_);
	}
 }